@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@{
	System.Collections.Generic.Dictionary<int,Decimal> basket = SessionBasket.GetBasket();
	
	bool reserveCreated = false;
	
	if (IsPost)
	{
		try
		{
			if (HttpContext.Current.Request["DeleteItem"]!= null)
			{
				int delGoodId = Convert.ToInt32(HttpContext.Current.Request["DeleteItem"]);
				SessionBasket.DeleteFromBasket(delGoodId);
			}
			if (HttpContext.Current.Request["UpdateItem"]!= null)
			{
				int updGoodId = Convert.ToInt32(HttpContext.Current.Request["UpdateItem"]);
				decimal newQty = Convert.ToDecimal(HttpContext.Current.Request["NewQuantity"]);
				if (basket.ContainsKey(updGoodId))
				{
					SessionBasket.UpdateBasketQuantity(updGoodId, newQty, basket[-updGoodId]);
				}
			}
			if (HttpContext.Current.Request["CrateReserve"]!= null)
			{
				try
				{
					string email = HttpContext.Current.Request["Email"];
					string name = HttpContext.Current.Request["Name"];
					string phone = HttpContext.Current.Request["Phone"];
					string password = "empty"; //HttpContext.Current.Request["Password"];
					string address = HttpContext.Current.Request["Address"];

					long agentId = -1;
					bool isClientEmailExists = UltimaWebService.IsClientExists(email);

					if (!isClientEmailExists)
					{
						agentId= UltimaWebService.CreateAgent( email, name, phone, password, address);
						if (agentId <= 0)
						{
							@Html.Raw("Unable to create Agent " + email);
						}
					}

					bool signed = UltimaWebService.SignInAgent( email, password);
					if (!signed)
					{
						@Html.Raw("Unable to sign in Agent " + email);
					}

					var res = UltimaWebService.CreateReserve();

					long reserveID = Convert.ToInt64(res["Id"]);
					DateTime deadDate = Convert.ToDateTime(res["DeadDate"]);
					if (reserveID > 0)
					{
						<h1>Cart is empty!</h1>
						<div class="modal fade" id="OrderSuccess" tabindex="-1" role="dialog" aria-labelledby="OrderSuccessLabel">
						  <div class="modal-dialog" role="document">
							<div class="modal-content">
							 
							  <div class="modal-body">
								<h1>Thank you for your order!</h1>

								<p>Number of your order @reserveID</p>
								<p>You can pick up your order @deadDate.ToString()</p><br/>
							  </div>
							 
							</div>
						  </div>
						</div>
						
						reserveCreated = true;
						SessionBasket.ClearBasket();
					}
				}
				catch{}
			}
		}
		catch (HttpException ex)
		{
			@Html.Raw("Server Error (" + ex.GetHttpCode() + "): " + ex.Message);
		}
	}
	
	if (!reserveCreated)
	{
		decimal total = 0;
		decimal count = 0;
		<div class="row cart">
		  <div class="col-md-9">
			<h1>MYCART</h1>
			
			<table  class="table-hover" width="100%">
				<thead>
					<tr class="table-head">
						<th>Product details</th>
						<th>Qty</th>
						<th>Price</th>
						<th>Total</th>
					</tr>
				</thead>
				<tbody>
			@foreach(int key in basket.Keys)
			{
				
				if (key > 0)
				{
					<tr class="separator"><td colspan="4"></td></tr>
					decimal amount = basket[-key]*basket[key];
					total += amount;
					count++;
					<tr class="cart-item">
						<td scope="row">
							<div class="image"><img class="card-img" src="/goodphoto/@key" /></div>	
							<a class="name" href="/good/@key">@UltimaWebService.GetProductInfo(key, "Name")</a>
							<span class="model"><i>Model</i>: @key</span> 
						</td>
						
						<td>
						@using (Html.BeginForm())
						{
							
							<table class="input-group"><tr>
								<input type="hidden" name="UpdateItem" value="@key"/>
								<td><span class="delete"></span></td>
								<td><span class="minus"></span></td>
								<td><span class="input"><input type="text" name="NewQuantity" value="@basket[key]"/></span></td>
								<td><span class="plus"></span></td>
							</tr>	
							</table>
						}
						</td>
						<td>&euro; @basket[-key].ToString("### ### ##0")</td>
						<td>&euro; @amount.ToString("### ### ##0")</td>

					</tr>
				}
			}
					

				</tbody>
			</table>
		  </div>
		  <div class="col-md-3">
		  <div class="order-form">
			<h2>ORDER SUMMARY</h2>
				<div class="summary">
					<span class="count"><em>@count items</em> <i>&euro;  @total.ToString("### ### ##0")</i></span>
					<span class="delivery"><em>Delivery</em> <i>€ 1401</i></span>
					<span class="total"><em>TOTAL</em> <i>&euro;  @total.ToString("### ### ##0")</i></span>
					<span class="update">Update cart</span>
				</div>
				@using (Html.BeginForm())
				{
					<input type="hidden" name="CrateReserve" value="true"/>
					<div class="form-group">
						 <label>Name:</label>
						  <input required type="text" name="Name" class="form-control" placeholder="Name" aria-describedby="basic-addon1">
					</div>

					<div class="form-group">
						 <label>Phone:</label>
						  <input required type="tel" name="Phone" class="form-control" placeholder="Phone" aria-describedby="basic-addon2">
					</div>
					<div class="form-group">
						 <label>Address:</label>
						  <input required type="text" name="Address" class="form-control" placeholder="Address" aria-describedby="basic-addon3">
					</div>

					<div class="form-group">
						 <label>Email:</label>
						  <input required type="email" name="Email" class="form-control" placeholder="Your Email" aria-describedby="basic-addon4">
					</div>
					<!--div class="row">
						<div class="input-group col-md-4">
						  <span class="input-group-addon" id="basic-addon5">Password:</span>
						  <input type="password" name="Password" class="form-control" aria-describedby="basic-addon5">
						</div>
					</div>
					<br-->

					
				}
			</div>
			<input type="submit" class="place-order" value="PLACE ORDER" />
		  </div>
		</div>
		
		
		
		
	
		
	}
}